// Code generated by hertz generator.

package comment

import (
	"context"

	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
	"github.com/jinzhu/copier"
	comment "minitok/cmd/api/biz/model/douyin/comment"
	"minitok/cmd/api/rpc"
	rpccomment "minitok/kitex_gen/douyin/comment"
)

// CommentAction .
// @router /douyin/comment/action/ [POST]
func CommentAction(ctx context.Context, c *app.RequestContext) {
	var err error
	var req comment.ActionRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(comment.ActionResponse)
	rpcResp := new(rpccomment.ActionResponse)

	rpcResp, err = rpc.CommentAction(ctx, &rpccomment.ActionRequest{
		Token:       req.Token,
		VideoId:     req.VideoID,
		ActionType:  req.ActionType,
		CommentText: req.CommentText,
		CommentId:   req.CommentID,
	})

	if err != nil {
		c.String(consts.StatusInternalServerError, err.Error())
		return
	}

	if err = copier.Copy(resp, rpcResp); err != nil {
		c.String(consts.StatusInternalServerError, err.Error())
		return
	}

	c.JSON(consts.StatusOK, resp)
}

// CommentList .
// @router /douyin/comment/list/ [GET]
func CommentList(ctx context.Context, c *app.RequestContext) {
	var err error
	var req comment.ListRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(comment.ListResponse)
	rpcResp := new(rpccomment.ListResponse)

	rpcResp, err = rpc.CommentList(ctx, &rpccomment.ListRequest{
		VideoId: req.VideoID,
		Token:   req.Token,
	})

	if err != nil {
		c.String(consts.StatusInternalServerError, err.Error())
		return
	}

	if err = copier.Copy(resp, rpcResp); err != nil {
		c.String(consts.StatusInternalServerError, err.Error())
		return
	}

	for i, comment := range rpcResp.CommentList {
		if err = copier.Copy(resp.CommentList[i], comment); err != nil {
			c.String(consts.StatusInternalServerError, err.Error())
			return
		}
		resp.CommentList[i].ID = comment.Id
		resp.CommentList[i].User.ID = comment.User.Id
		resp.CommentList[i].User.Name = comment.User.Name
	}

	c.JSON(consts.StatusOK, resp)
}
